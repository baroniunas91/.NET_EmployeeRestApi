// <auto-generated />
using System;
using EmployeeTask.RestApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeTask.RestApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210209135759_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("EmployeeTask.RestApi.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BossId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BossId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1991, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentSalary = 5000m,
                            EmploymentDate = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dominick",
                            HomeAddress = "Vilnius, Ozo g. 30",
                            LastName = "Crouch",
                            Role = "CEO"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1991, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BossId = 1,
                            CurrentSalary = 3000m,
                            EmploymentDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            HomeAddress = "Vilnius, Ozo g. 30",
                            LastName = "Crouch",
                            Role = "Project Manager"
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(1991, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BossId = 2,
                            CurrentSalary = 2000m,
                            EmploymentDate = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Donny",
                            HomeAddress = "Vilnius, Ozo g. 30",
                            LastName = "Crouch",
                            Role = ".NET developer"
                        },
                        new
                        {
                            Id = 4,
                            Birthdate = new DateTime(1991, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BossId = 2,
                            CurrentSalary = 2000m,
                            EmploymentDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Rick",
                            HomeAddress = "Vilnius, Ozo g. 30",
                            LastName = "Crouch",
                            Role = ".NET developer"
                        },
                        new
                        {
                            Id = 5,
                            Birthdate = new DateTime(1991, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BossId = 2,
                            CurrentSalary = 2000m,
                            EmploymentDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bill",
                            HomeAddress = "Vilnius, Ozo g. 30",
                            LastName = "Crouch",
                            Role = ".NET developer"
                        },
                        new
                        {
                            Id = 6,
                            Birthdate = new DateTime(1991, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BossId = 2,
                            CurrentSalary = 2000m,
                            EmploymentDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Rodger",
                            HomeAddress = "Vilnius, Ozo g. 30",
                            LastName = "Crouch",
                            Role = ".NET developer"
                        });
                });

            modelBuilder.Entity("EmployeeTask.RestApi.Models.Employee", b =>
                {
                    b.HasOne("EmployeeTask.RestApi.Models.Employee", "Boss")
                        .WithMany()
                        .HasForeignKey("BossId");

                    b.Navigation("Boss");
                });
#pragma warning restore 612, 618
        }
    }
}
